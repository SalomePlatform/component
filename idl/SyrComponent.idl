// Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
//
// Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
// CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

//  File   : SyrComponent.idl
//  Author : Jean Rahuel
//
#ifndef _SYRCOMPONENT_IDL
#define _SYRCOMPONENT_IDL

#include "SALOME_Component.idl"

module SuperVisionTest {

  typedef sequence<long> SeqOfSyr ;

  interface ListOfSyr ;

  interface Syr ;

  interface SyrComponent : Engines::EngineComponent {

    long C_ISEVEN( in long anInteger ) ;
    long C_ISONE( in long anOddInteger ) ;
    long C_M3( in long anOddInteger ) ;
    long C_M3P1( in long anOddInteger ) ;
    long C_DIV2( in long anEvenInteger ) ;
    long C_INCR( in long aCount ) ;
    void CPP_SETLONG( in long aLong ) ;
    long CPP_ADDTOLONG( in long anIncr ) ;
    long C_MIN( in long aMinVal , in long anInteger ) ;
    long C_MAX( in long aMaxVal , in long anInteger ) ;
    ListOfSyr C_LISTOFSYR() ;
    ListOfSyr C_AVERAGE( in ListOfSyr aListOfSyr , in long anInteger ,
                         in long aCount , out double anAverage ) ;

    Syr Init( in long anOddInteger ) ;

  };

  interface ListOfSyr : Engines::EngineComponent {
    SuperVisionTest::SeqOfSyr GetSeqOfSyr() ;
    void SetSeqOfSyr( in SuperVisionTest::SeqOfSyr aSeqOfSyr ) ;
  };

  interface Syr : SyrComponent {

    long Initial() ;
    long Current() ;
    long IsEven() ;
    long IsOne() ;
    long Count() ;
    void M3p1() ;
    void Div2() ;
    void Incr() ;

  };

} ;

#endif

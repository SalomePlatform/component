// Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
//
// Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
// CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

//  File   : SyrControlComponent.idl
//  Author : Jean Rahuel
//
#ifndef _SYRCONTROLCOMPONENT_IDL
#define _SYRCONTROLCOMPONENT_IDL

#include "SALOME_Component.idl"

module SuperVisionTest {

  interface SyrControlComponent : Engines::EngineComponent {

    void L_OneEven( in long ValOne , in long ValEven ,
                    out long Finished , out long Incr ,
                    out long Even , out long Odd ) ;

    void C_NotOneIsEven( out long ValOne , out long ValEven ) ;

    void LOOPN( in long InLoop , in long NN , in long KK ,
                in long min , in long max ,
                out long OutLoop , out long N , out long K ) ;

    void WHILENOTONE( in long N , out long OutLoop ) ;

    void IFNOTEVEN( in long N , out long Odd , out long Even ) ;

    void LOOPi( in long InLoop , in long ii , out long OutLoop , out long i ) ;

    void WHILEEVEN( in long N , out long OutLoop ) ;

  };

};
#endif
